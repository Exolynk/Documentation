{
  "uuid": "1fb8b799-668d-486f-b5ce-15470bc0bf42",
  "ident": "maintenance_request",
  "version": {
    "typ": "Number",
    "version": "1"
  },
  "status": "draft",
  "name": [
    [
      "en",
      "Maintenance request"
    ],
    [
      "de",
      "Wartungsauftrag"
    ]
  ],
  "description": [
    [
      "en",
      "Maintenance request"
    ],
    [
      "de",
      "Wartungsauftrag"
    ]
  ],
  "icon": "wrench",
  "layout": "<record>\n    <!-- Service Auftrag -->\n    <tab name=\"Service Auftrag\" active=\"true\" status=\"\">\n        <data name=\"Stammdaten\">\n            <variable ident=\"ident\" access=\"write\" />\n            <variable ident=\"name\" access=\"write\" />\n            <variable ident=\"description\" access=\"write\" />\n            <variable ident=\"client_reference\" access=\"write\" />\n            <variable ident=\"assigned_user_1\" access=\"write\" />\n            <variable ident=\"status\" access=\"write\" />\n        </data>\n        <data name=\"Zu wartendes Equipment\">\n            <variable ident=\"goods_reference\" access=\"write\" />\n            <variable ident=\"equipment_reference_list\" access=\"write\" />\n        </data>\n        <data name=\"Service Report\">\n            <variable ident=\"service_report\" access=\"write\" />\n            <variable ident=\"time_tracking\" access=\"write\" />\n            <variable ident=\"client_accept\" access=\"write\" />\n        </data>\n    </tab>\n\n    <!-- Chart -->\n    <tab name=\"Chart\">\n        <chart typ=\"bar\" name=\"Service Requests by status\">\n            <chart-data model=\"maintenance_request\" action=\"count\" variable=\"status\" group_by=\"ident\" name=\"New\">\n                <data-filter variable=\"status\" operator=\"equal\" value=\"new\" />\n            </chart-data>\n            <chart-data model=\"maintenance_request\" action=\"count\" variable=\"status\" group_by=\"ident\" name=\"Scheduled\">\n                <data-filter variable=\"status\" operator=\"equal\" value=\"scheduled\" />\n            </chart-data>\n            <chart-data model=\"maintenance_request\" action=\"count\" variable=\"status\" group_by=\"ident\" name=\"In process\">\n                <data-filter variable=\"status\" operator=\"equal\" value=\"in_process\" />\n            </chart-data>\n            <chart-data model=\"maintenance_request\" action=\"count\" variable=\"status\" group_by=\"ident\" name=\"Done\">\n                <data-filter variable=\"status\" operator=\"equal\" value=\"done\" />\n            </chart-data>\n        </chart>\n    </tab>\n</record>",
  "variables": [
    {
      "ident": "client_reference",
      "system": false,
      "released": false,
      "name": [
        [
          "en",
          "Client"
        ],
        [
          "de",
          "Kunde"
        ]
      ],
      "description": [
        [
          "en",
          "Client"
        ],
        [
          "de",
          "Kunde"
        ]
      ],
      "value": {
        "Reference": "00000000-0000-0000-0000-000000000000"
      },
      "required": false,
      "access": "Write",
      "settings": {
        "ReferenceSettings": {
          "typ": {
            "RecordTyp": "client"
          }
        }
      }
    },
    {
      "ident": "goods_reference",
      "system": false,
      "released": false,
      "name": [
        [
          "en",
          "Goods"
        ],
        [
          "de",
          "Zu wartende Produkte"
        ]
      ],
      "description": [
        [
          "en",
          "Goods"
        ],
        [
          "de",
          "Zu wartende Produkte"
        ]
      ],
      "value": {
        "Table": {
          "entries": []
        }
      },
      "required": false,
      "access": "Write",
      "settings": {
        "TableSettings": {
          "columns": [
            {
              "ident": "goods",
              "position": 0,
              "name": [
                [
                  "en",
                  "Goods"
                ],
                [
                  "de",
                  "zu wartende Produkte"
                ]
              ],
              "value": {
                "Reference": "00000000-0000-0000-0000-000000000000"
              },
              "setting": "None"
            },
            {
              "ident": "serial",
              "position": 1,
              "name": [
                [
                  "en",
                  "Seriel number"
                ],
                [
                  "de",
                  "Serie Nummer"
                ]
              ],
              "value": {
                "String": ""
              },
              "setting": "None"
            }
          ]
        }
      }
    },
    {
      "ident": "assigned_user_1",
      "system": false,
      "released": false,
      "name": [
        [
          "en",
          "Responsible service engineer"
        ],
        [
          "de",
          "Zuständiger Service Techniker"
        ]
      ],
      "description": [
        [
          "en",
          "Responsible service engineer"
        ],
        [
          "de",
          "Zuständiger Servicetechniker"
        ]
      ],
      "value": {
        "Reference": "00000000-0000-0000-0000-000000000000"
      },
      "required": false,
      "access": "Write",
      "settings": {
        "ReferenceSettings": {
          "typ": {
            "RecordTyp": "user"
          }
        }
      }
    },
    {
      "ident": "time_tracking",
      "system": false,
      "released": false,
      "name": [
        [
          "en",
          "Time tracking"
        ],
        [
          "de",
          "Zeiterfassung"
        ]
      ],
      "description": [
        [
          "en",
          "Time tracking"
        ],
        [
          "de",
          "Zeiterfassung"
        ]
      ],
      "value": {
        "Table": {
          "entries": []
        }
      },
      "required": false,
      "access": "Write",
      "settings": {
        "TableSettings": {
          "columns": [
            {
              "ident": "user",
              "position": 0,
              "name": [
                [
                  "en",
                  "User"
                ],
                [
                  "de",
                  "Benutzer"
                ]
              ],
              "value": {
                "Reference": "00000000-0000-0000-0000-000000000000"
              },
              "setting": {
                "ReferenceSettings": {
                  "typ": {
                    "RecordTyp": "user"
                  }
                }
              }
            },
            {
              "ident": "task",
              "position": 2,
              "name": [
                [
                  "en",
                  "Task"
                ],
                [
                  "de",
                  "Arbeit"
                ]
              ],
              "value": {
                "String": ""
              },
              "setting": "None"
            },
            {
              "ident": "time",
              "position": 3,
              "name": [
                [
                  "en",
                  "Time (h)"
                ],
                [
                  "de",
                  "Zeitaufwand (h)"
                ]
              ],
              "value": {
                "Float": 0.0
              },
              "setting": "None"
            },
            {
              "ident": "date",
              "position": 1,
              "name": [
                [
                  "en",
                  "Date"
                ],
                [
                  "de",
                  "Datum"
                ]
              ],
              "value": {
                "Datetime": "2023-07-03 16:09:42.528 +02:00:00"
              },
              "setting": "None"
            }
          ]
        }
      }
    },
    {
      "ident": "service_report",
      "system": false,
      "released": false,
      "name": [
        [
          "en",
          "Service Report"
        ],
        [
          "de",
          "Service Report"
        ]
      ],
      "description": [
        [
          "en",
          "Service Report"
        ],
        [
          "de",
          "Service Report"
        ]
      ],
      "value": {
        "Table": {
          "entries": []
        }
      },
      "required": false,
      "access": "Write",
      "settings": {
        "TableSettings": {
          "columns": [
            {
              "ident": "goods",
              "position": 0,
              "name": [
                [
                  "en",
                  "Goods"
                ],
                [
                  "de",
                  "Zu wartende Produkte"
                ]
              ],
              "value": {
                "Reference": "00000000-0000-0000-0000-000000000000"
              },
              "setting": "None"
            },
            {
              "ident": "task",
              "position": 1,
              "name": [
                [
                  "en",
                  "Task"
                ],
                [
                  "de",
                  "Arbeit"
                ]
              ],
              "value": {
                "String": ""
              },
              "setting": "None"
            },
            {
              "ident": "time",
              "position": 2,
              "name": [
                [
                  "en",
                  "Time (h)"
                ],
                [
                  "de",
                  "Zeitaufwand (h)"
                ]
              ],
              "value": {
                "Float": 0.0
              },
              "setting": "None"
            }
          ]
        }
      }
    },
    {
      "ident": "client_accept",
      "system": false,
      "released": false,
      "name": [
        [
          "en",
          "Accepted by client"
        ],
        [
          "de",
          "abgenommen durch Kunde"
        ]
      ],
      "description": [
        [
          "en",
          "Accepted by client"
        ],
        [
          "de",
          "abgenommen durch Kunde"
        ]
      ],
      "value": {
        "Bool": false
      },
      "required": false,
      "access": "Write",
      "settings": "None"
    },
    {
      "ident": "service_date",
      "system": false,
      "released": false,
      "name": [
        [
          "en",
          "Date and Time"
        ],
        [
          "de",
          "Auftragsdatum und Zeit"
        ]
      ],
      "description": [
        [
          "en",
          "Date and Time"
        ],
        [
          "de",
          "Auftragsdatum und Zeit"
        ]
      ],
      "value": {
        "List": {
          "data": []
        }
      },
      "required": false,
      "access": "Write",
      "settings": "None"
    }
  ],
  "workflows": [
    {
      "ident": "scheduled_maintenance",
      "name": [
        [
          "en",
          "Scheduled Maintenance"
        ]
      ],
      "description": [
        [
          "en",
          "Scheduled Maintenance"
        ]
      ],
      "icon": "accelerated",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = webapp::get_record()?;\n    if record.status.as_string() == \"new\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = webapp::get_record()?;\n    let inp = (\"scheduled\", \"\", \"rgb(192, 215, 230, 0.3)\");\n    webapp::rpc_call(\"set_status\", inp).await?;\n    // set in inbox\n    let usr = record.get_value(Ident::new(\"assigned_user_1\"))?.get_reference()?.as_string();\n    let inp = (usr, record.uuid);\n    dbg(usr);\n    dbg(record.uuid);\n    webapp::rpc_call(\"set_user_inbox\", inp).await?;\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}\n",
      "typ": "Workflow"
    },
    {
      "ident": "in_process",
      "name": [
        [
          "en",
          "Maintenance in Process"
        ]
      ],
      "description": [
        [
          "en",
          "Maintenance in Process"
        ]
      ],
      "icon": "in-progress",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = webapp::get_record()?;\n    if record.status.as_string() == \"scheduled\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = webapp::get_record()?;\n    let inp = (\"in_process\", \"\", \"rgb(231, 140, 7, 0.3)\");\n    webapp::rpc_call(\"set_status\", inp).await?;\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}",
      "typ": "Workflow"
    },
    {
      "ident": "done",
      "name": [
        [
          "en",
          "Done"
        ]
      ],
      "description": [
        [
          "en",
          "Maintenance done"
        ]
      ],
      "icon": "accept",
      "active": true,
      "system": false,
      "code": "pub fn show() {\n    let record = webapp::get_record()?;\n    if record.status.as_string() == \"in_process\" {\n        return true;\n    }\n    return false;\n}\n\npub async fn main() {\n    let record = webapp::get_record()?;\n    let inp = (\"done\", \"\", \"rgb(43, 125, 43, 0.3)\");\n    webapp::rpc_call(\"set_status\", inp).await?;\n    Ok(())\n}\n\npub async fn test() {\n    //let x = show();\n    //println!(\"Show {}\", x);\n    main().await?;\n}",
      "typ": "Workflow"
    }
  ],
  "services": [
    {
      "ident": "set_status",
      "name": [
        [
          "en",
          "Set Status Service"
        ]
      ],
      "description": [
        [
          "en",
          "Set Status Service"
        ]
      ],
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(inp) {\n    dbg(inp.0);\n    let status = Ident::new(inp.0);\n    let record = server::get_record()?;\n    server::db::update_record_value(record.uuid, Ident::new(\"status\"), Value::Ident(status)).await?;\n    server::db::update_record_value(record.uuid, Ident::new(\"highlight_color\"), Value::Color(Color::new(inp.2))).await?;\n    Ok(())\n}\n\npub async fn test() {\n    let inp = (\"pending\", \"\", \"\");\n    main(inp).await?;\n}",
      "typ": "Service"
    },
    {
      "ident": "set_user_inbox",
      "name": [
        [
          "en",
          "Set User Inbox"
        ]
      ],
      "description": [
        [
          "en",
          "Set User Inbox Service"
        ]
      ],
      "icon": "database",
      "active": true,
      "system": false,
      "code": "pub async fn main(inp) {\n    dbg(inp.0);\n    dbg(inp.1);\n    server::db::add_inbox(inp.0, inp.1).await?;\n    Ok(())\n}\n\npub async fn test() {\n}",
      "typ": "Service"
    }
  ],
  "record_status": {
    "selected": [
      "new"
    ],
    "options": {
      "scheduled": [
        [
          "en",
          "scheduled"
        ],
        [
          "de",
          "geplant"
        ]
      ],
      "in_process": [
        [
          "en",
          "in Process"
        ],
        [
          "de",
          "in Bearbeitung"
        ]
      ],
      "done": [
        [
          "en",
          "done"
        ],
        [
          "de",
          "abgeschlossen"
        ]
      ],
      "new": [
        [
          "en",
          "new"
        ],
        [
          "de",
          "Neu"
        ]
      ]
    }
  },
  "record_right": "5584c12d-87af-40fc-a00f-eac7de4d1384",
  "system": false
}